---
import type { CollectionEntry } from "astro:content";
import AnswerSpoiler from "./AnswerSpoiler.astro";
import { tagToSlug } from "../utils/tagUtils";
import { getPopularityDisplay } from "../utils/popularityUtils";

type GagEntry = CollectionEntry<"gags">;

interface Props {
  gag: GagEntry;
  variant?: "default" | "featured" | "detail";
  titleLevel?: "h1" | "h2" | "h3";
  showDate?: boolean;
  showTitleLink?: boolean;
  showLikes?: boolean;
  currentTag?: string;
  spoilerId: string;
}

const {
  gag,
  variant = "default",
  titleLevel = "h3",
  showDate = false,
  showTitleLink = false,
  showLikes = false,
  currentTag,
  spoilerId,
} = Astro.props;

const TitleTag = titleLevel;
---

<article
  class={`gag-card ${variant === "featured" ? "featured" : ""} ${variant === "detail" ? "gag-detail" : ""}`}
>
  {
    (variant !== "default" || showLikes) && (
      <div class="gag-header">
        {gag.data.featured && <span class="featured">‚≠ê Ïù∏Í∏∞</span>}
        {showLikes && gag.data.likes > 0 && (
          <span class="likes-count">
            {getPopularityDisplay(gag.data.likes)}
          </span>
        )}
      </div>
    )
  }

  <TitleTag class="gag-title">
    {
      showTitleLink ? (
        <a href={`/${gag.data.slug}`} class="gag-title-link">
          {gag.data.title}
        </a>
      ) : (
        gag.data.title
      )
    }
  </TitleTag>

  {gag.data.body && <AnswerSpoiler answer={gag.data.body} id={spoilerId} />}

  <div class="gag-footer">
    <div class="gag-actions">
      {
        variant !== "detail" && (
          <a href={`/${gag.data.slug}`} class="comment-link">
            üí¨ ÎåìÍ∏Ä & Ï¢ãÏïÑÏöî
          </a>
        )
      }
    </div>
    <div class="tags">
      {
        gag.data.tags.map((tag: string) => (
          <a
            href={`/tags/${tagToSlug(tag)}`}
            class={`tag ${currentTag && tag === currentTag ? "current-tag" : ""}`}
          >
            #{tag}
          </a>
        ))
      }
    </div>
    {
      showDate && (
        <time datetime={gag.data.createdAt.toISOString()}>
          {new Date(gag.data.createdAt).toLocaleDateString("ko-KR")}
        </time>
      )
    }
  </div>
</article>

<style>
  /* Gag Card Component Styles */

  .gag-card {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: var(--radius-2xl);
    padding: var(--space-8);
    box-shadow: var(--shadow-sm);
    transition: var(--transition-smooth);
    max-width: 700px;
    margin: 0 auto;
  }

  .gag-card:hover {
    box-shadow: var(--shadow-md);
    transform: translateY(-2px);
  }

  .gag-card.featured {
    border: 2px solid var(--color-primary);
    box-shadow: var(--shadow-md);
  }

  .gag-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: var(--space-3);
    gap: var(--space-4);
  }

  .gag-title {
    color: var(--color-text);
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-semibold);
    line-height: var(--line-height-snug);
    margin: 0;
    flex: 1;
  }

  .gag-card.featured .gag-title {
    color: var(--color-primary-dark);
    font-size: var(--font-size-2xl);
  }

  .featured-badge {
    font-size: var(--font-size-sm);
    color: var(--color-warning);
    font-weight: var(--font-weight-semibold);
    background: rgba(245, 158, 11, 0.1);
    padding: var(--space-1) var(--space-2);
    border-radius: var(--radius-base);
    flex-shrink: 0;
  }

  .likes-count {
    font-size: var(--font-size-sm);
    font-weight: var(--font-weight-semibold);
    padding: var(--space-1) var(--space-2);
    border-radius: var(--radius-base);
    flex-shrink: 0;
    background: rgba(59, 130, 246, 0.1);
    color: var(--color-primary-dark);
  }

  .gag-body {
    color: var(--color-text);
    font-size: var(--font-size-base);
    line-height: var(--line-height-relaxed);
    margin-bottom: var(--space-4);
    white-space: pre-line;
  }

  .pun-format {
    margin: var(--space-4) 0;
  }

  .pun-format .question {
    color: var(--color-primary-dark);
    font-size: var(--font-size-lg);
    font-weight: var(--font-weight-semibold);
    margin-bottom: var(--space-3);
    line-height: var(--line-height-snug);
  }

  .pun-format .answer {
    color: white;
    font-size: var(--font-size-xl);
    font-weight: var(--font-weight-bold);
    margin-bottom: var(--space-3);
    padding: var(--space-3) var(--space-4);
    background: var(--gradient-primary);
    border-radius: var(--radius-lg);
    text-align: center;
    line-height: var(--line-height-snug);
  }

  .gag-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: var(--space-6);
    padding-top: var(--space-6);
    border-top: 1px solid var(--color-border);
    flex-wrap: wrap;
    gap: var(--space-3);
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: var(--space-2);
    flex: 1;
  }

  .tag {
    font-size: var(--font-size-sm);
    padding: var(--space-2) var(--space-3);
    background: var(--color-primary);
    color: white;
    border-radius: var(--radius-full);
    text-decoration: none;
    transition: var(--transition-base);
    font-weight: var(--font-weight-medium);
  }

  .tag:hover {
    background: var(--color-primary-hover);
    transform: translateY(-1px);
  }

  .comment-link {
    color: var(--color-link);
    text-decoration: none;
    font-weight: var(--font-weight-semibold);
    transition: var(--transition-base);
    white-space: nowrap;
  }

  .comment-link:hover {
    color: var(--color-link-hover);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .gag-card {
      padding: var(--space-6);
    }

    .gag-header {
      flex-direction: column;
      align-items: flex-start;
      gap: var(--space-2);
    }

    .gag-title {
      font-size: var(--font-size-lg);
    }

    .gag-card.featured .gag-title {
      font-size: var(--font-size-xl);
    }

    .gag-footer {
      flex-direction: column;
      align-items: flex-start;
    }

    .pun-format .answer {
      font-size: var(--font-size-lg);
    }
  }
</style>
