---
import BookmarkIcon from "../icons/Bookmark.astro";
import SearchIcon from "../icons/Search.astro";
import MenuIcon from "../icons/Menu.astro";
import XIcon from "../icons/X.astro";
import TagIcon from "../icons/Tag.astro";
import LanguagePicker from "./LanguagePicker.astro";
import {
  getLangFromUrl,
  useTranslations,
  getLocalizedUrl,
} from "../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 현재 페이지 감지
const currentPath = Astro.url.pathname;
const isTagsPage = currentPath.includes("/tags");
const isPopularPage = currentPath.includes("/popular");
const isLatestPage = currentPath.includes("/latest");
const isRandomPage = currentPath.includes("/random");
const isSearchPage = currentPath.includes("/search");
const isSavedPage = currentPath.includes("/saved");

// 활성 상태 스타일
const getNavStyle = (isActive: boolean) => {
  return isActive
    ? "px-3 py-2 bg-primary/10 text-primary font-semibold rounded-md transition-colors"
    : "px-3 py-2 text-foreground hover:text-primary hover:bg-accent rounded-md transition-colors";
};

// 모바일 네비게이션용 스타일
const getMobileNavStyle = (isActive: boolean) => {
  return isActive
    ? "text-primary font-semibold bg-primary/10 px-3 py-2 rounded-md transition-colors"
    : "text-foreground hover:text-primary px-3 py-2 rounded-md hover:bg-accent transition-colors";
};
---

<header
  class="sticky top-0 z-50 bg-background/80 backdrop-blur-md border-b border-border"
>
  <div class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between">
      <a href={getLocalizedUrl("/", lang)} class="flex items-center space-x-2">
        <img
          src="/logo.png"
          alt={t("home.hero.title")}
          class="w-10 h-10 rounded-full"
        />
        <div>
          <h1 class="text-xl font-bold text-foreground">
            {t("home.hero.title")}
          </h1>
          <p class="text-xs text-muted-foreground hidden sm:block">
            {t("home.hero.subtitle")}
          </p>
        </div>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-6">
        <a
          href={getLocalizedUrl("/latest", lang)}
          class={getNavStyle(isLatestPage)}
        >
          🌟 {t("nav.latest")}
        </a>
        <a
          href={getLocalizedUrl("/popular", lang)}
          class={getNavStyle(isPopularPage)}
        >
          🔥 {t("nav.popular")}
        </a>
        <a
          href={getLocalizedUrl("/random", lang)}
          class={getNavStyle(isRandomPage)}
        >
          🎲 {t("nav.random")}
        </a>
      </nav>

      <div class="hidden md:flex items-center space-x-2">
        <!-- 언어 전환기 -->
        <LanguagePicker />

        <a
          href={getLocalizedUrl("/tags", lang)}
          class={isTagsPage
            ? "p-2 bg-primary/10 text-primary rounded-md transition-colors"
            : "p-2 hover:bg-accent rounded-md transition-colors"}
          title={t("nav.tags")}
        >
          <TagIcon size={20} />
        </a>
        <a
          href={getLocalizedUrl("/search", lang)}
          class={isSearchPage
            ? "p-2 bg-primary/10 text-primary rounded-md transition-colors"
            : "p-2 hover:bg-accent rounded-md transition-colors"}
          title={t("nav.search")}
        >
          <SearchIcon size={20} />
        </a>
        <a
          href={getLocalizedUrl("/saved", lang)}
          class={isSavedPage
            ? "p-2 bg-primary/10 text-primary rounded-md transition-colors"
            : "p-2 hover:bg-accent rounded-md transition-colors"}
          title={t("nav.saved")}
        >
          <BookmarkIcon size={20} />
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-btn"
        class="md:hidden p-2 hover:bg-accent rounded-md transition-colors"
        aria-label="메뉴"
      >
        <MenuIcon id="menu-icon" size={20} />
        <XIcon id="close-icon" size={20} class="hidden" />
      </button>
    </div>

    <!-- Mobile Navigation -->
    <nav
      id="mobile-menu"
      class="hidden md:hidden mt-4 pb-4 border-t border-border pt-4"
    >
      <div class="flex flex-col space-y-2">
        <!-- 언어 전환 (모바일) -->
        <LanguagePicker showLabel={true} />

        <a
          href={getLocalizedUrl("/latest", lang)}
          class={getMobileNavStyle(isLatestPage)}
        >
          🌟 {t("nav.latest")}
        </a>
        <a
          href={getLocalizedUrl("/popular", lang)}
          class={getMobileNavStyle(isPopularPage)}
        >
          🔥 {t("nav.popular")}
        </a>
        <a
          href={getLocalizedUrl("/random", lang)}
          class={getMobileNavStyle(isRandomPage)}
        >
          🎲 {t("nav.random")}
        </a>
        <a
          href={getLocalizedUrl("/tags", lang)}
          class={getMobileNavStyle(isTagsPage)}
        >
          <TagIcon size={16} class="inline mr-2" />
          {t("nav.tags")}
        </a>
        <a
          href={getLocalizedUrl("/search", lang)}
          class={getMobileNavStyle(isSearchPage)}
        >
          <SearchIcon size={16} class="inline mr-2" />
          {t("nav.search")}
        </a>
        <a
          href={getLocalizedUrl("/saved", lang)}
          class={getMobileNavStyle(isSavedPage)}
        >
          <BookmarkIcon size={16} class="inline mr-2" />
          {t("nav.saved")}
        </a>
      </div>
    </nav>
  </div>
</header>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const mobileMenuBtn = document.getElementById("mobile-menu-btn");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");

    if (mobileMenuBtn && mobileMenu && menuIcon && closeIcon) {
      mobileMenuBtn.addEventListener("click", () => {
        // Toggle menu visibility
        mobileMenu.classList.toggle("hidden");

        // Toggle icons
        menuIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });

      // Close menu when clicking a link
      mobileMenu.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
          menuIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        });
      });
    }
  });
</script>
