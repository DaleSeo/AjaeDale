---
import { Image } from "astro:assets";
import logo from "../assets/logo.png";
import MenuIcon from "../icons/Menu.astro";
import XIcon from "../icons/X.astro";
import Star from "../icons/Star.astro";
import Flame from "../icons/Flame.astro";
import Folder from "../icons/Folder.astro";
import Search from "../icons/Search.astro";
import Bookmark from "../icons/Bookmark.astro";
import LangToggle from "./LangToggle.astro";
import ThemeToggle from "./ThemeToggle.astro";
import {
  getLangFromUrl,
  getLocalizedUrl,
  useTranslations,
} from "../utils/i18n";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

// 현재 페이지 감지
const currentPath = Astro.url.pathname;
const isTagsPage = currentPath.includes("/tags");
const isPopularPage = currentPath.includes("/popular");
const isLatestPage = currentPath.includes("/latest");
const isSearchPage = currentPath.includes("/search");
const isSavedPage = currentPath.includes("/saved");

// 활성 상태 스타일
const getNavStyle = (isActive: boolean) => {
  return isActive
    ? "px-3 py-2 bg-primary/10 text-primary font-semibold rounded-md transition-colors"
    : "px-3 py-2 text-foreground hover:text-primary hover:bg-accent rounded-md transition-colors";
};

// 모바일 네비게이션용 스타일
const getMobileNavStyle = (isActive: boolean) => {
  return isActive
    ? "text-primary font-semibold bg-primary/10 px-3 py-2 rounded-md transition-colors"
    : "text-foreground hover:text-primary px-3 py-2 rounded-md hover:bg-accent transition-colors";
};
---

<header
  class="bg-background/80 border-border sticky top-0 z-50 border-b backdrop-blur-md"
>
  <div class="container mx-auto px-4 py-4">
    <div class="flex items-center justify-between gap-6">
      <a href={getLocalizedUrl("/", lang)} class="flex items-center gap-2">
        <Image
          src={logo}
          alt={t("아재달레", "AjaeDale")}
          width={40}
          height={40}
          quality={100}
          class="h-10 w-10 rounded-full"
        />
        <div>
          <h1 class="text-foreground text-xl font-bold">
            {t("아재달레", "AjaeDale")}
          </h1>
          <p class="text-muted-foreground hidden text-xs sm:block">
            {t("아재개그 웃어달레", "Korean Puns Collection")}
          </p>
        </div>
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden items-center gap-6 md:flex">
        <a
          href={getLocalizedUrl("/latest", lang)}
          class={`${getNavStyle(isLatestPage)} flex items-center gap-1.5`}
        >
          <Star size={16} />
          <span>{t("최신 개그", "Latest")}</span>
        </a>
        <a
          href={getLocalizedUrl("/popular", lang)}
          class={`${getNavStyle(isPopularPage)} flex items-center gap-1.5`}
        >
          <Flame size={16} />
          <span>{t("인기 개그", "Popular")}</span>
        </a>
        <a
          href={getLocalizedUrl("/tags", lang)}
          class={`${getNavStyle(isTagsPage)} flex items-center gap-1.5`}
        >
          <Folder size={16} />
          <span>{t("개그 분류", "Tags")}</span>
        </a>
      </nav>

      <div class="hidden items-center gap-2 md:flex">
        <!-- 검색 -->
        <a
          href={getLocalizedUrl("/search", lang)}
          class={`${isSearchPage ? "text-primary" : "text-foreground hover:text-primary"} rounded-md p-2 transition-colors hover:bg-accent`}
          aria-label={t("개그 검색", "Search")}
          title={t("개그 검색", "Search")}
        >
          <Search size={20} />
        </a>

        <!-- 다크모드 토글 -->
        <ThemeToggle />

        <!-- 언어 전환기 -->
        <LangToggle />
      </div>

      <!-- Mobile Menu Button -->
      <button
        id="mobile-menu-btn"
        class="hover:bg-accent rounded-md p-2 transition-colors md:hidden"
        aria-label="메뉴"
      >
        <MenuIcon id="menu-icon" size={20} />
        <XIcon id="close-icon" size={20} class="hidden" />
      </button>
    </div>

    <!-- Mobile Navigation -->
    <nav
      id="mobile-menu"
      class="border-border mt-4 hidden border-t pt-4 pb-4 md:hidden"
    >
      <div class="flex flex-col gap-2">
        <a
          href={getLocalizedUrl("/latest", lang)}
          class={`${getMobileNavStyle(isLatestPage)} flex items-center gap-2`}
        >
          <Star size={16} />
          <span>{t("최신 개그", "Latest")}</span>
        </a>
        <a
          href={getLocalizedUrl("/popular", lang)}
          class={`${getMobileNavStyle(isPopularPage)} flex items-center gap-2`}
        >
          <Flame size={16} />
          <span>{t("인기 개그", "Popular")}</span>
        </a>
        <a
          href={getLocalizedUrl("/tags", lang)}
          class={`${getMobileNavStyle(isTagsPage)} flex items-center gap-2`}
        >
          <Folder size={16} />
          <span>{t("개그 분류", "Tags")}</span>
        </a>
        <a
          href={getLocalizedUrl("/search", lang)}
          class={`${getMobileNavStyle(isSearchPage)} flex items-center gap-2`}
        >
          <Search size={16} />
          <span>{t("개그 검색", "Search")}</span>
        </a>
        <a
          href={getLocalizedUrl("/saved", lang)}
          class={`${getMobileNavStyle(isSavedPage)} flex items-center gap-2`}
        >
          <Bookmark size={16} />
          <span>{t("개그 저장", "Saved")}</span>
        </a>

        <!-- 언어 전환 및 다크모드 토글 (모바일 - 맨 아래) -->
        <div
          class="border-border flex items-center justify-end gap-2 border-t pt-2"
        >
          <ThemeToggle />
          <LangToggle />
        </div>
      </div>
    </nav>
  </div>
</header>

<script>
  document.addEventListener("astro:page-load", () => {
    const mobileMenuBtn = document.getElementById("mobile-menu-btn");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon");
    const closeIcon = document.getElementById("close-icon");

    if (mobileMenuBtn && mobileMenu && menuIcon && closeIcon) {
      mobileMenuBtn.addEventListener("click", () => {
        // Toggle menu visibility
        mobileMenu.classList.toggle("hidden");

        // Toggle icons
        menuIcon.classList.toggle("hidden");
        closeIcon.classList.toggle("hidden");
      });

      // Close menu when clicking a link
      mobileMenu.querySelectorAll("a").forEach((link) => {
        link.addEventListener("click", () => {
          mobileMenu.classList.add("hidden");
          menuIcon.classList.remove("hidden");
          closeIcon.classList.add("hidden");
        });
      });
    }
  });
</script>
