---
import { getCollection, type CollectionEntry } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import AnswerSpoiler from "../components/AnswerSpoiler.astro";
import { tagToSlug } from "../utils/tagUtils";

type GagEntry = CollectionEntry<"gags">;

const allGags = await getCollection("gags", ({ data }: GagEntry) => {
  return data.published === true;
});

// 랜덤 개그 선택
function getRandomGag(gags: GagEntry[]): GagEntry {
  const randomIndex = Math.floor(Math.random() * gags.length);
  return gags[randomIndex];
}

const randomGag = getRandomGag(allGags);
---

<BaseLayout
  title="랜덤 개그"
  description="랜덤으로 선택된 아재개그를 즐겨보세요"
  currentPage="random"
>
  <div class="section-header" data-pagefind-ignore>
    <h2 class="section-title">🎲 랜덤 개그</h2>
    <p class="section-description">매번 새로운 개그를 만나보세요!</p>
  </div>

  <!-- 랜덤 개그 섹션 -->
  <section class="page-section" data-pagefind-body>
    <article class="gag-card featured">
      <h3 class="gag-title">{randomGag.data.title}</h3>

      {
        randomGag.data.body && (
          <AnswerSpoiler answer={randomGag.data.body} id="random-gag" />
        )
      }

      <div class="gag-footer">
        <div class="tags">
          {
            randomGag.data.tags.map((tag: string) => (
              <a href={`/tags/${tagToSlug(tag)}`} class="tag">
                #{tag}
              </a>
            ))
          }
        </div>
        <a href={`/gags/${randomGag.data.slug}`} class="detail-link"
          >자세히 보기 →</a
        >
      </div>
    </article>
  </section>

  <!-- 액션 버튼들 -->
  <div class="action-buttons" data-pagefind-ignore>
    <button
      type="button"
      class="action-button random"
      onclick="window.location.reload()"
    >
      🎲 다른 개그 보기
    </button>
  </div>
</BaseLayout>
