---
import Layout from "../layouts/Layout.astro";
import { getCollection, type CollectionEntry } from "astro:content";

type GagEntry = CollectionEntry<"gags">;

// 모든 태그 목록 가져오기
const allGags = await getCollection("gags", ({ data }: GagEntry) => {
  return data.published === true;
});

const allTags = new Set<string>();
allGags.forEach((gag: GagEntry) => {
  gag.data.tags.forEach((tag: string) => {
    allTags.add(tag);
  });
});

const sortedTags = Array.from(allTags).sort();

// 페이지 메타 정보
const title = "개그 제출";
const description = "재미있는 아재개그를 공유해주세요!";
---

<Layout title={title} description={description} currentPage="submit">
  <section class="py-16 px-4">
    <div class="container mx-auto max-w-2xl">
      <!-- 페이지 헤더 -->
      <div class="text-center mb-12">
        <h1 class="text-3xl font-bold text-foreground mb-4">📝 {title}</h1>
        <p class="text-muted-foreground text-lg">
          {description}
        </p>
      </div>

      <!-- 제출 폼 -->
      <div class="bg-card border border-border rounded-xl p-8">
        <form id="submit-form" class="space-y-6">
          <!-- 개그 질문 -->
          <div>
            <label
              for="title"
              class="block text-sm font-medium text-foreground mb-2"
            >
              개그 질문 <span class="text-destructive">*</span>
            </label>
            <input
              type="text"
              id="title"
              name="title"
              required
              placeholder="예: 왕이 넘어지면?"
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent bg-background"
            />
            <p class="text-xs text-muted-foreground mt-1">
              질문 형식으로 입력해주세요.
            </p>
          </div>

          <!-- 개그 답변 -->
          <div>
            <label
              for="body"
              class="block text-sm font-medium text-foreground mb-2"
            >
              개그 답변 <span class="text-destructive">*</span>
            </label>
            <input
              type="text"
              id="body"
              name="body"
              required
              placeholder="예: 킹콩"
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent bg-background"
            />
            <p class="text-xs text-muted-foreground mt-1">
              재치있는 답변을 입력해주세요.
            </p>
          </div>

          <!-- 태그 -->
          <div>
            <label
              for="tags"
              class="block text-sm font-medium text-foreground mb-2"
            >
              태그 <span class="text-muted-foreground">(선택사항)</span>
            </label>
            <input
              type="text"
              id="tags"
              name="tags"
              placeholder="예: 왕, 동물"
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent bg-background"
            />
            <p class="text-xs text-muted-foreground mt-1">
              쉼표(,)로 구분하여 여러 태그를 입력할 수 있습니다.
            </p>
            <div class="mt-2">
              <p class="text-xs text-muted-foreground mb-1">인기 태그:</p>
              <div class="flex flex-wrap gap-1">
                {
                  sortedTags.slice(0, 10).map((tag) => (
                    <button
                      type="button"
                      class="tag-suggestion text-xs px-2 py-1 bg-muted text-muted-foreground rounded hover:bg-primary/10 hover:text-primary transition-colors"
                      data-tag={tag}
                    >
                      #{tag}
                    </button>
                  ))
                }
              </div>
            </div>
          </div>

          <!-- 작성자 -->
          <div>
            <label
              for="author"
              class="block text-sm font-medium text-foreground mb-2"
            >
              작성자 닉네임 <span class="text-destructive">*</span>
            </label>
            <input
              type="text"
              id="author"
              name="author"
              required
              placeholder="닉네임을 입력해주세요"
              class="w-full px-3 py-2 border border-border rounded-md focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent bg-background"
              maxlength="20"
            />
            <p class="text-xs text-muted-foreground mt-1">
              최대 20자까지 입력 가능합니다.
            </p>
          </div>

          <!-- 제출 버튼 -->
          <div class="pt-4">
            <button
              type="submit"
              class="w-full px-6 py-3 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors font-medium"
            >
              개그 제출하기
            </button>
          </div>
        </form>

        <!-- 성공 메시지 -->
        <div
          id="success-message"
          class="hidden mt-6 p-4 bg-green-50 border border-green-200 rounded-lg"
        >
          <div class="flex items-center">
            <div class="text-green-600 text-xl mr-3">✅</div>
            <div>
              <h3 class="text-green-800 font-medium">제출 완료!</h3>
              <p class="text-green-700 text-sm">
                개그가 성공적으로 제출되었습니다. 검토 후 사이트에 추가됩니다.
              </p>
            </div>
          </div>
        </div>
      </div>

      <!-- 제출 가이드라인 -->
      <div class="mt-8 bg-muted/50 rounded-xl p-6">
        <h3 class="text-lg font-semibold text-foreground mb-4">
          📋 제출 가이드라인
        </h3>
        <ul class="space-y-2 text-muted-foreground">
          <li class="flex items-start">
            <span class="text-primary mr-2">•</span>
            건전하고 재미있는 아재개그만 제출해주세요
          </li>
          <li class="flex items-start">
            <span class="text-primary mr-2">•</span>
            타인의 저작권을 침해하지 않는 내용으로 작성해주세요
          </li>
          <li class="flex items-start">
            <span class="text-primary mr-2">•</span>
            욕설이나 비방, 선정적인 내용은 삭제될 수 있습니다
          </li>
          <li class="flex items-start">
            <span class="text-primary mr-2">•</span>
            제출된 개그는 검토 후 1-3일 내에 사이트에 반영됩니다
          </li>
        </ul>
      </div>

      <!-- 돌아가기 버튼 -->
      <div class="mt-8 text-center">
        <a
          href="/"
          class="inline-block px-6 py-3 border border-border rounded-lg hover:bg-accent transition-colors"
        >
          ← 홈으로 돌아가기
        </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const form = document.getElementById("submit-form") as HTMLFormElement;
    const successMessage = document.getElementById(
      "success-message",
    ) as HTMLElement;
    const tagsInput = document.getElementById("tags") as HTMLInputElement;

    // 태그 제안 버튼 클릭 시
    document.querySelectorAll(".tag-suggestion").forEach((btn) => {
      btn.addEventListener("click", () => {
        const tag = btn.getAttribute("data-tag");
        if (tag && tagsInput) {
          const currentTags = tagsInput.value
            .split(",")
            .map((t) => t.trim())
            .filter((t) => t);
          if (!currentTags.includes(tag)) {
            currentTags.push(tag);
            tagsInput.value = currentTags.join(", ");
          }
        }
      });
    });

    form.addEventListener("submit", (e) => {
      e.preventDefault();

      // 폼 데이터 수집
      const formData = new FormData(form);
      const title = formData.get("title") as string;
      const body = formData.get("body") as string;
      const tags = formData.get("tags") as string;
      const author = formData.get("author") as string;

      // 기본 유효성 검사
      if (!title || title.length < 2) {
        alert("개그 질문을 2자 이상 입력해주세요.");
        return;
      }

      if (!body || body.length < 1) {
        alert("개그 답변을 입력해주세요.");
        return;
      }

      if (!author || author.length < 1) {
        alert("작성자 닉네임을 입력해주세요.");
        return;
      }

      // 태그 처리
      const tagList = tags
        ? tags
            .split(",")
            .map((t) => t.trim())
            .filter((t) => t)
        : [];

      // 여기서 실제로는 서버로 데이터를 전송해야 하지만,
      // 현재는 데모 버전이므로 성공 메시지만 표시
      console.log("제출된 개그:", {
        title,
        body,
        tags: tagList,
        author,
        date: new Date().toISOString().split("T")[0],
      });

      // 폼 숨기기 및 성공 메시지 표시
      form.style.display = "none";
      successMessage.classList.remove("hidden");

      // 3초 후 페이지 새로고침 (폼 초기화)
      setTimeout(() => {
        window.location.reload();
      }, 3000);
    });
  });
</script>
