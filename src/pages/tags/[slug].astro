---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Card from "../../components/Card.astro";
import { tagToSlug } from "../../utils/tagUtils";

type GagEntry = CollectionEntry<"gags">;

export async function getStaticPaths() {
  const allGags = await getCollection("gags", ({ data }: GagEntry) => {
    return data.published === true;
  });

  // 모든 고유 태그 수집
  const allTags = new Set<string>();
  allGags.forEach((gag: GagEntry) => {
    gag.data.tags.forEach((tag: string) => {
      allTags.add(tag);
    });
  });

  // 각 태그에 대한 페이지 생성
  return Array.from(allTags).map((tag: string) => ({
    params: {
      slug: tagToSlug(tag),
    },
    props: {
      tag,
      gags: allGags.filter((gag: GagEntry) => gag.data.tags.includes(tag)),
    },
  }));
}

interface Props {
  tag: string;
  gags: GagEntry[];
}

const { tag, gags } = Astro.props;

// SEO를 위한 메타 데이터
const pageTitle = `#${tag} 태그의 개그`;
const pageDescription = `"${tag}" 태그가 포함된 ${gags.length}개의 재미있는 아재개그를 만나보세요.`;
---

<Layout
  title={pageTitle}
  description={pageDescription}
  ogTitle={pageTitle}
  ogDescription={pageDescription}
  currentPage="tag"
>
  <div class="container mx-auto px-4 py-8">
    <!-- 태그 헤더 -->
    <section class="mb-8" data-pagefind-ignore>
      <h1 class="text-3xl font-bold text-foreground mb-2">#{tag}</h1>
      <p class="text-muted-foreground">
        이 태그가 포함된 개그 <strong>{gags.length}개</strong>
      </p>
    </section>

    <!-- 개그 목록 -->
    <section class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {gags.map((gag) => <Card gag={gag} />)}
    </section>
  </div>
</Layout>
