---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../../layouts/Layout.astro";
import { tagToSlug } from "../../../utils/tagUtils";
import {
  getLocalizedUrl,
  getStaticPathsLocales,
  normalizeLang,
  useTranslations,
} from "../../../utils/i18n";

export async function getStaticPaths() {
  return getStaticPathsLocales().map((lang) => ({
    params: { lang },
  }));
}

type GagEntry = CollectionEntry<"gags">;

const { lang: langParam } = Astro.params;
const lang = normalizeLang(langParam);

const t = useTranslations(lang);

const allGags = await getCollection("gags", ({ data }: GagEntry) => {
  return data.published === true;
});

// 모든 태그와 개그 개수 계산
const tagCounts = new Map<string, number>();
allGags.forEach((gag: GagEntry) => {
  gag.data.tags.forEach((tag: string) => {
    tagCounts.set(tag, (tagCounts.get(tag) || 0) + 1);
  });
});

// 태그를 개그 개수로 정렬 (많은 순서대로)
const sortedTags = Array.from(tagCounts.entries())
  .sort((a, b) => b[1] - a[1])
  .map(([tag, count]) => ({ tag, count }));
---

<Layout
  title={t("개그 분류", "Tags")}
  description={t("개그를 태그 별로 분류해놓았습니다", "Find puns by tags")}
  currentPage="tags"
  lang={lang}
>
  <!-- 헤더 섹션 -->
  <section
    class="from-primary/5 to-background bg-gradient-to-b px-4 pt-12 pb-8"
  >
    <div class="container mx-auto max-w-4xl text-center">
      <h1 class="text-foreground mb-3 text-3xl font-bold md:text-4xl">
        📁 {t("개그 분류", "Tags")}
      </h1>
      <p class="text-muted-foreground text-lg">
        {t("개그를 태그 별로 분류해놓았습니다", "Find puns by tags")}
      </p>
    </div>
  </section>

  <!-- 태그 목록 섹션 -->
  <section class="px-4 pt-6 pb-8">
    <div class="container mx-auto max-w-6xl">
      <div
        class="mb-12 grid grid-cols-2 gap-4 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5"
      >
        {
          sortedTags.map(({ tag, count }) => (
            <a
              href={getLocalizedUrl(`/tags/${tagToSlug(tag)}`, lang)}
              class="group bg-card border-border hover:border-primary/50 rounded-lg border p-4 transition-all duration-200 hover:scale-105 hover:shadow-md"
            >
              <div class="text-foreground group-hover:text-primary mb-1 text-lg font-semibold transition-colors">
                #{tag}
              </div>
              <div class="text-muted-foreground text-sm">
                {t(`${count}개`, `${count} puns`)}
              </div>
            </a>
          ))
        }
      </div>

      <div class="text-center">
        <a
          href={getLocalizedUrl("/", lang)}
          class="border-border hover:bg-accent inline-block rounded-lg border px-6 py-3 transition-colors"
        >
          ← {t("홈으로 돌아가기", "Back to Home")}
        </a>
      </div>
    </div>
  </section>
</Layout>
