---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import BookmarkIcon from "../../icons/Bookmark.astro";
import Share2Icon from "../../icons/Share2.astro";
import {
  getLocalizedUrl,
  getStaticPathsLocales,
  normalizeLang,
  useTranslations,
} from "../../utils/i18n";

export async function getStaticPaths() {
  return getStaticPathsLocales().map((lang) => ({
    params: { lang },
  }));
}

type GagEntry = CollectionEntry<"gags">;

const { lang: langParam } = Astro.params;
const lang = normalizeLang(langParam);

const t = useTranslations(lang);

const allGags = await getCollection("gags", ({ data }: GagEntry) => {
  return data.published === true;
});

// 랜덤 개그 선택
function getRandomGag(gags: GagEntry[]): GagEntry {
  const randomIndex = Math.floor(Math.random() * gags.length);
  return gags[randomIndex];
}

const randomGag = getRandomGag(allGags);
const spoilerId = "random-gag";

// 페이지 메타 정보
const title = t("랜덤 개그", "Random Pun");
const description = t("행운의 개그를 만나보세요", "Discover your lucky pun");
---

<Layout title={title} description={description} currentPage="random">
  <!-- 헤더 섹션 -->
  <section class="from-primary/5 to-background bg-gradient-to-b px-4 py-12">
    <div class="container mx-auto max-w-4xl text-center">
      <h2 class="text-foreground mb-3 text-3xl font-bold md:text-4xl">
        🎲 {title}
      </h2>
      <p class="text-muted-foreground text-lg">
        {description}
      </p>
    </div>
  </section>

  <!-- 랜덤 개그 섹션 -->
  <section class="px-4 py-8">
    <div class="container mx-auto max-w-4xl">
      <div
        class="card bg-card border-border rounded-lg border"
        data-gag-slug={randomGag.data.slug}
      >
        <div class="p-6 md:p-8">
          <div class="mb-4 flex items-start justify-between">
            <div class="flex flex-wrap gap-2">
              {
                randomGag.data.tags.map((tag: string) => (
                  <a
                    href={getLocalizedUrl(`/tags/${tag}`, lang)}
                    class="bg-primary/10 text-primary hover:bg-primary/20 inline-block rounded-full px-3 py-1 text-sm font-medium transition-colors"
                  >
                    #{tag}
                  </a>
                ))
              }
            </div>
            <div class="flex items-center space-x-2">
              <button
                class="save-btn hover:bg-accent rounded-md p-2 transition-colors"
                data-gag={JSON.stringify({
                  slug: randomGag.data.slug,
                  title: randomGag.data.title,
                  description: randomGag.data.description,
                  tags: randomGag.data.tags,
                })}
                aria-label={t("저장", "Save")}
              >
                <BookmarkIcon class="bookmark-icon h-4 w-4" />
                <BookmarkIcon
                  class="bookmark-check-icon text-primary hidden h-4 w-4"
                  fill="currentColor"
                />
              </button>
              <button
                class="share-btn hover:bg-accent rounded-md p-2 transition-colors"
                data-content={`${randomGag.data.title}${randomGag.data.description ? " - " + randomGag.data.description : ""}`}
                data-slug={randomGag.data.slug}
                aria-label={t("공유", "Share")}
              >
                <Share2Icon size={16} />
              </button>
            </div>
          </div>

          <div class="mb-6">
            <h3 class="text-foreground mb-4 text-xl font-bold md:text-2xl">
              {t("Q.", "Q.")}
              {randomGag.data.title}
            </h3>

            {
              randomGag.data.description && (
                <div class="spoiler-container">
                  <button
                    id={spoilerId}
                    class="spoiler-btn bg-muted hover:bg-muted-foreground/20 text-muted-foreground rounded px-3 py-1 text-sm transition-colors"
                    data-spoiler-id={spoilerId}
                  >
                    {t("답변 보기 👀", "Show Answer 👀")}
                  </button>
                  <p
                    id={`${spoilerId}-content`}
                    class="spoiler-content text-foreground mt-3 hidden text-lg md:text-xl"
                  >
                    {t("A.", "A.")} {randomGag.data.description}
                  </p>
                </div>
              )
            }
          </div>

          <div class="text-center">
            <a
              href={getLocalizedUrl(`/gags/${randomGag.data.slug}`, lang)}
              class="text-muted-foreground hover:text-primary inline-flex items-center text-sm transition-colors"
            >
              {t("목록으로", "Back to List")}
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="2"
                stroke-linecap="round"
                stroke-linejoin="round"
                class="ml-1"
              >
                <path d="M5 12h14"></path>
                <path d="m12 5 7 7-7 7"></path>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- 액션 버튼들 -->
  <div class="px-4 py-8 text-center">
    <button
      type="button"
      class="bg-primary text-primary-foreground hover:bg-primary/90 rounded-lg px-8 py-3 text-lg font-medium shadow-md transition-colors hover:shadow-lg"
      onclick="window.location.reload()"
    >
      {t("🎲 다음 개그", "🎲 Next Pun")}
    </button>
  </div>
</Layout>

<script>
  import { initGagInteractions } from "../../scripts/gagInteractions";

  // 페이지 로드 시 초기화
  initGagInteractions();
</script>
