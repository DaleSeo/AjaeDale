---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Heading from "../../components/Heading.astro";
import ListCard from "../../components/ListCard.astro";
import { sortGagsByPopularity } from "../../utils/popularityUtils";
import { enrichGagsWithLikes } from "../../utils/discussionsApi";
import {
  getStaticPathsLocales,
  normalizeLang,
  useTranslations,
} from "../../utils/i18n";

export async function getStaticPaths() {
  return getStaticPathsLocales().map((lang) => ({
    params: { lang },
  }));
}

type GagEntry = CollectionEntry<"gags">;

const { lang: langParam } = Astro.params;
const lang = normalizeLang(langParam);

const t = useTranslations(lang);

const allGags = await getCollection("gags", ({ data }: GagEntry) => {
  return data.published === true;
});

// GitHub Discussions에서 likes 데이터를 가져와서 개그에 추가
const gagsWithLikesData = await enrichGagsWithLikes(allGags);

// likes 수에 따라 정렬
const popularGags = sortGagsByPopularity(gagsWithLikesData);

// 표시할 개그 선택: 항상 12개 고정
const displayGags = popularGags.slice(0, 12);
---

<Layout
  title={t("인기 개그", "Popular Puns")}
  description={t("가장 많은 사랑을 받고 있는 개그들", "The most loved puns")}
  currentPage="popular"
  lang={lang}
>
  <!-- 헤더 섹션 -->
  <section class="from-primary/5 to-background bg-gradient-to-b px-4 py-12">
    <div class="container mx-auto max-w-4xl">
      <Heading
        title={`🔥 ${t("인기 개그", "Popular Puns")}`}
        subtitle={t(
          "가장 뜨거운 반응을 얻고 있는 개그들",
          "The hottest puns getting the most reactions",
        )}
      />
    </div>
  </section>

  <!-- 인기 개그 섹션 -->
  <section class="px-4 py-8">
    <div class="container mx-auto max-w-6xl">
      <!-- TOP 3 섹션 -->
      {
        displayGags.length > 0 && (
          <div class="from-primary/10 to-primary/5 mb-8 rounded-2xl bg-gradient-to-r p-6">
            <div class="mb-4">
              <h2 class="text-foreground flex items-center text-xl font-bold">
                🏆 {t("이번 주 TOP 3", "Top 3 This Week")}
              </h2>
            </div>

            <div class="grid grid-cols-1 gap-6 md:grid-cols-3">
              {displayGags.slice(0, 3).map((gag, index) => (
                <div class="group relative">
                  {/* 순위 배지 */}
                  <div class="bg-primary text-primary-foreground absolute -top-3 -left-3 z-10 flex h-11 w-11 items-center justify-center rounded-full text-base font-bold">
                    {index + 1}
                  </div>

                  {/* 카드 강조 효과 */}
                  <div class="relative">
                    {index === 0 && (
                      <div class="absolute -inset-0.5 rounded-lg bg-gradient-to-r from-yellow-400/30 to-orange-400/30 opacity-50 blur transition-opacity group-hover:opacity-75" />
                    )}
                    <div class="relative">
                      <ListCard gag={gag} lang={lang} />
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )
      }

      <!-- 나머지 개그들 -->
      {
        displayGags.length > 3 && (
          <div class="grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
            {displayGags.slice(3).map((gag, index) => (
              <div class="relative">
                <div class="absolute -top-3 -left-3 z-10 flex h-10 w-10 items-center justify-center rounded-full bg-gray-500 text-sm font-bold text-white">
                  {index + 4}
                </div>
                <ListCard gag={gag} lang={lang} />
              </div>
            ))}
          </div>
        )
      }
    </div>
  </section>
</Layout>
