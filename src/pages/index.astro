---
import { getCollection } from 'astro:content';

const allGags = await getCollection('gags', ({ data }) => {
  return data.publishStatus === 'published';
});

const sortedGags = allGags.sort((a, b) =>
  new Date(b.data.createdAt).getTime() - new Date(a.data.createdAt).getTime()
);

const categoryEmojis: Record<string, string> = {
  'developer-humor': '😂',
  'si-hell': '🔥',
  'job-hunting': '💼',
  'code-review': '👀',
  'debugging': '🐛',
  'overtime': '🌙',
  'tech-interview': '📝',
  'ajae-gag': '🤓',
  'seasonal': '🍂',
  'economic': '💰',
  'trending': '🔥'
};

const categoryNames: Record<string, string> = {
  'developer-humor': '개발자 유머',
  'si-hell': 'SI 지옥',
  'job-hunting': '취준생 썰',
  'code-review': '코드 리뷰',
  'debugging': '디버깅',
  'overtime': '야근',
  'tech-interview': '기술 면접',
  'ajae-gag': '아재개그',
  'seasonal': '계절개그',
  'economic': '경제개그',
  'trending': '시사개그'
};
---

<html lang="ko">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>아재달레 - 개발자들의 웃음 저장소</title>
    <meta name="description" content="한국 개발자들을 위한 IT 유머와 개그 모음" />
  </head>
  <body>
    <header>
      <h1>🇰🇷 아재달레</h1>
      <p>개발자들의 웃음 저장소</p>
    </header>

    <main>
      <div class="gags-grid">
        {sortedGags.map((gag) => (
          <article class="gag-card">
            <div class="gag-header">
              <span class="category">
                {categoryEmojis[gag.data.category]} {categoryNames[gag.data.category]}
              </span>
              {gag.data.featured && <span class="featured">⭐ 인기</span>}
            </div>
            <h2>{gag.data.title}</h2>
            {gag.data.type === 'pun' ? (
              <div class="pun-format">
                <p class="question">Q: {gag.data.title}</p>
                <p class="answer">A: {gag.data.body}</p>
              </div>
            ) : (
              gag.data.body && <p class="gag-body">{gag.data.body}</p>
            )}
            <div class="gag-footer">
              <div class="tags">
                {gag.data.tags.map(tag => (
                  <span class="tag">#{tag}</span>
                ))}
              </div>
              <time datetime={gag.data.createdAt.toISOString()}>
                {new Date(gag.data.createdAt).toLocaleDateString('ko-KR')}
              </time>
            </div>
          </article>
        ))}
      </div>
    </main>

    <footer>
      <p>Made with ❤️ for Korean Developers</p>
    </footer>
  </body>
</html>

<style>
  :root {
    --color-primary: #2563eb;
    --color-primary-dark: #1e40af;
    --color-bg: #ffffff;
    --color-card: #f9fafb;
    --color-border: #e5e7eb;
    --color-text: #1f2937;
    --color-text-muted: #6b7280;
    --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1);
  }

  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family:
      -apple-system, BlinkMacSystemFont, "Segoe UI", "Noto Sans KR", sans-serif;
    background-color: var(--color-bg);
    color: var(--color-text);
    line-height: 1.6;
  }

  header {
    text-align: center;
    padding: 3rem 1rem 2rem;
    border-bottom: 1px solid var(--color-border);
  }

  header h1 {
    color: var(--color-primary);
    font-size: 2.5rem;
    margin-bottom: 0.5rem;
  }

  header p {
    color: var(--color-text-muted);
    font-size: 1.125rem;
  }

  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  .gags-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: 1.5rem;
  }

  .gag-card {
    background: var(--color-card);
    border: 1px solid var(--color-border);
    border-radius: 12px;
    padding: 1.5rem;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .gag-card:hover {
    transform: translateY(-2px);
    box-shadow: var(--shadow-md);
  }

  .gag-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 0.75rem;
  }

  .category {
    font-size: 0.875rem;
    color: var(--color-text-muted);
    font-weight: 500;
  }

  .featured {
    font-size: 0.875rem;
    color: #f59e0b;
    font-weight: 600;
  }

  .gag-card h2 {
    color: var(--color-primary-dark);
    font-size: 1.25rem;
    margin-bottom: 0.75rem;
    line-height: 1.4;
  }

  .gag-body {
    color: var(--color-text);
    font-size: 1rem;
    margin-bottom: 1rem;
    white-space: pre-line;
  }

  .pun-format {
    margin: 1rem 0;
  }

  .pun-format .question {
    color: var(--color-primary-dark);
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 0.75rem;
  }

  .pun-format .answer {
    color: var(--color-text);
    font-size: 1.25rem;
    font-weight: 700;
    margin-bottom: 0.75rem;
    padding: 0.75rem;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 8px;
    text-align: center;
  }


  .gag-footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--color-border);
  }

  .tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tag {
    font-size: 0.75rem;
    padding: 0.25rem 0.5rem;
    background: var(--color-primary);
    color: white;
    border-radius: 9999px;
  }

  time {
    font-size: 0.875rem;
    color: var(--color-text-muted);
  }

  footer {
    text-align: center;
    padding: 3rem 1rem;
    margin-top: 3rem;
    border-top: 1px solid var(--color-border);
    color: var(--color-text-muted);
  }

  @media (max-width: 768px) {
    .gags-grid {
      grid-template-columns: 1fr;
    }
  }
</style>
